//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Paciente.java
//  @ Date : 07/09/2021
//  @ Author : Oscar Luciano Flores Leija 570390
//  @ Objetivo : Registrar datos de paciente, desplegarlos y poderlos cambiar en un programa orientado a objetos.

//Librerias necesarias para ejecucion del codigo
import java.io.*;
import java.util.*;
import java.time.*;

//Clase paciente
class Paciente {
	private String nombre;
	private String enfermedad;
	private LocalDate fechaNacimiento;
	private long telefono;
	private String medicamento;
	private long[] periodoAplicacion;
	private LocalDate fechaUltimaAplicacion;
	
   //Metodo constructor
   public Paciente(String nombre, String enfermedad, LocalDate fechaNacimiento, long telefono, String medicamento, long[] periodoAplicacion, LocalDate fechaUltimaAplicacion) {
	   setNombre(nombre);
      setEnfermedad(enfermedad);
      setFechaNacimiento(fechaNacimiento);
      setTelefono(telefono);
      setMedicamento(medicamento);
      setPeriodoAplicacion(periodoAplicacion);
      setFechaUltimaAplicacion(fechaUltimaAplicacion);
	}
	
	//Metodo para definir nombre
   public void setNombre(String nombre) {
	   this.nombre=nombre;
	}
	
	//Metodo para retornar nombre
   public String getNombre() {
	   return nombre;
	}
	
   //Metodo para definir enfermedad
	public void setEnfermedad(String enfermedad) {
	   this.enfermedad=enfermedad;
	}
	
   //Metodo para retornar enfermedad
	public String getEnfermedad() {
	   return enfermedad;
	}
	
   //Metodo para definir fecha de nacimiento
	public void setFechaNacimiento(LocalDate fechaNacimiento) {
	   this.fechaNacimiento=fechaNacimiento;
	}
	
   //Metodo para retornar fecha de nacimiento
	public LocalDate getFechaNacimiento() {
	   return fechaNacimiento;
	}
	
   //Metodo para definir telefono
	public void setTelefono(long telefono) {
	   this.telefono=telefono;
	}
	
   //Metodo para retornar telefono
	public long getTelefono() {
	   return telefono;
	}
	
   //Metodo para definir medicamento
	public void setMedicamento(String medicamento) {
	   this.medicamento=medicamento;
	}
	
   //Metodo para retornar medicamento
	public String getMedicamento() {
	   return medicamento;
	}
	
   //Metodo para definir periodo de aplicacion
	public void setPeriodoAplicacion(long[] periodoAplicacion) {
	   this.periodoAplicacion=periodoAplicacion;
	}
	
   //Metodo para retornar periodo de aplicacion
	public long[] getPeriodoAplicacion() {
	   return periodoAplicacion;
	}
	
   //Metodo para definir ultima fecha de aplicacion
	public void setFechaUltimaAplicacion(LocalDate fechaUltimaAplicacion) {
	   this.fechaUltimaAplicacion=fechaUltimaAplicacion;
	}
	
   //Metodo para retornar ultima fecha de aplicacion
	public LocalDate getFechaUltimaAplicacion() {
	   return fechaUltimaAplicacion;
	}
	
   //Metodo para calcular fecha siguiente
	public LocalDate calcFechaSiguiente(){
      LocalDate fechaSiguiente= LocalDate.of(1,1,1);
      if(periodoAplicacion[1]==0)
         fechaSiguiente=fechaUltimaAplicacion.plusDays(periodoAplicacion[0]);
      else if(periodoAplicacion[1]==1)
         fechaSiguiente=fechaUltimaAplicacion.plusWeeks(periodoAplicacion[0]);
      else if(periodoAplicacion[1]==2)
         fechaSiguiente=fechaUltimaAplicacion.plusMonths(periodoAplicacion[0]);
      else if(periodoAplicacion[1]==3)
            fechaSiguiente=fechaUltimaAplicacion.plusYears(periodoAplicacion[0]);
      return fechaSiguiente;
   }
   
   //Metodo para imprimir datos del paciente
   public String toString() {
      String periodo;
      if(periodoAplicacion[1]==0)
         periodo="dias";
      else if(periodoAplicacion[1]==1)
         periodo="semanas";
      else if(periodoAplicacion[1]==2)
         periodo="meses";
      else
         periodo="años";
	   return getNombre()+"\nNacio: "+getFechaNacimiento()+"\nTelefono: "+getTelefono()+"\nEnfermedad: "+getEnfermedad()+"\nMedicamento: "+getMedicamento()+"\nPeriodo de aplicacion: "+periodoAplicacion[0]+" "+periodo+"\nFecha de ultima aplicacion: "+getFechaUltimaAplicacion();
	}
}

//Clase principal donde se ejecuta el codigo
class Principal{
   //Metodo main
   public static void main(String args[]){
      Paciente p1=new Paciente(pedirNombre(), pedirEnfermedad(), pedirFechaNacimiento(), pedirTelefono(), pedirMedicamento(), pedirPeriodo(), pedirFechaUltimaAplicacion());
      elegirAccion(p1);
   }
   
   //Metodo con ciclo para que el usuario escoja la accion que desea hacer
   public static void elegirAccion(Paciente p1){
      Scanner s=new Scanner(System.in);
      byte continuar=0;
      do{
         System.out.println("\nIngrese el numero correspondiente a la accion que desea realizar:\n0 - Salir del programa\n1 - Desplegar datos completos del paciente\n2 - Modificar datos\n3 - Calcular nueva fecha");
         do{
            continuar=s.nextByte();
            if(continuar<0 || continuar>3)
               System.out.println("Ingrese una opcion valida");
         }while(continuar<0 || continuar>3);
         switch (continuar){
            case 0:
               System.out.println("Gracias por usar el programa.");
            break;
            
            case 1:
               System.out.println(p1);
            break;
            
            case 2:
               modificarDatos(p1);
            break;
            
            case 3:
               System.out.println("Debe de generar la fecha de la siguiente aplicacion: "+p1.calcFechaSiguiente());
            break;
         }
      }while(continuar!=0);
   }
   
   //Metodo para modificar datos del paciente
   public static void modificarDatos(Paciente p1){
      Scanner s=new Scanner(System.in);
      System.out.println("Ingrese numero correspondiente al dato del paciente que desea cambiar:\n1 - Enfermedad\n2 - Telefono\n3 - Medicamento\n4 - Periodo\n5 - Ultima fecha de aplicacion");
      byte opcion;
      do{
         opcion=s.nextByte();
         if(opcion<1 || opcion>5)
            System.out.println("Ingrese una opicion valida");
      }while(opcion<1 || opcion>5);
      switch (opcion){
         case 1:
            p1.setEnfermedad(Principal.pedirEnfermedad());
         break;

         case 2:
            p1.setTelefono(Principal.pedirTelefono());
         break;
         
         case 3:
            p1.setMedicamento(Principal.pedirMedicamento());
         break;
         
         case 4:
            p1.setPeriodoAplicacion(Principal.pedirPeriodo());
         break;
         
         case 5:
            p1.setFechaUltimaAplicacion(Principal.pedirFechaUltimaAplicacion());
         break;
      }
      System.out.println("**Nuevo registro de datos**\n"+p1);
   }
   
   //Metodo para pedir nombre
   public static String pedirNombre(){
      Scanner s= new Scanner(System.in);
      String nombre;
      System.out.println("Ingrese nombre completo del paciente");
      do{
         nombre=s.nextLine();
         if(nombre.equals(""))
            System.out.println("Ingrese un nombre valido");
      }while(nombre.equals(""));
      return nombre;
   }
   
   //Metodo para pedir fecha de nacimiento
   public static LocalDate pedirFechaNacimiento(){
      Scanner s= new Scanner(System.in);
      int dia, mes, year;
        //Ingresar año
        System.out.println("Ingrese año de nacimiento del paciente");
        do{
            year=s.nextInt();
            if(year<1)
            System.out.println("Ingrese un año valido");
        }while(year<1);
        //Ingresar mes    
        System.out.println("Ingrese mes");
        do{
            mes=s.nextInt();
            if(!(mes>=1 && mes<=12))
            System.out.println("Ingrese un numero del 1 al 12");
        }while(!(mes>=1 && mes<=12));
        //Ingresar dia    
        System.out.println("Ingrese dia del mes");
        //Meses con 31 dias 
        byte limite;   
        if(mes==1 || mes==3 || mes==5 || mes==7 || mes==8 || mes==10 || mes==12){
            limite=31;
            do{
                dia=s.nextInt();
                if(!(dia>=1 && dia<=limite))
                System.out.println("Ingrese un dia entre 1 y "+limite);
            }while(!(dia>=1 && dia<=limite));
        }
        //Meses con 30 dias
        else if(mes==4 || mes==6 || mes==9 || mes==11){
            limite=30;
            do{
                dia=s.nextInt();
                if(!(dia>=1 && dia<=limite))
                System.out.println("Ingrese un dia entre 1 y "+limite);
            }while(!(dia>=1 && dia<=limite));
        }
        //Febrero
        else{
        limite=28;
        if(year%4==0 && (!(year%100==0)||year%400==0))//Es bisiesto cuando es divisible entre 4 y no divisile entre 100 o divisible entre 400.
            //2000 es bisiesto, 1900 no.
            limite=29;
            do{
                dia=s.nextInt();
                if(!(dia>=1 && dia<=limite))
                System.out.println("Ingrese un dia entre 1 y "+limite);
            }while(!(dia>=1 && dia<=limite));
        }
        LocalDate fechaNacimiento=LocalDate.of(year, mes, dia);
      return fechaNacimiento;
   }
   
   //Metodo para pedir telefono
   public static long pedirTelefono(){
      Scanner s= new Scanner(System.in);
      long telefono;
      System.out.println("Ingrese telefono del paciente");
      do{
         telefono=s.nextLong();
         if(telefono<1)
            System.out.println("Ingrese un telefono valido");
      }while(telefono<1);
      return telefono;
   }
   
   //Metodo para pedir enfermedad
   public static String pedirEnfermedad(){
      Scanner s= new Scanner(System.in);
      String enfermedad;
      System.out.println("Ingrese enfermedad del paciente");
      do{
         enfermedad=s.nextLine();
         if(enfermedad.equals(""))
            System.out.println("Ingrese una enfermedad valido");
      }while(enfermedad.equals(""));
      return enfermedad;
   }
   
   //Metodo para pedir medicamento
   public static String pedirMedicamento(){
      Scanner s= new Scanner(System.in);
      String medicamento;
      System.out.println("Ingrese medicamento del paciente");
      do{
         medicamento=s.nextLine();
         if(medicamento.equals(""))
            System.out.println("Ingrese un medicamento valido");
      }while(medicamento.equals(""));
      return medicamento;
   }
   
   //Metodo para pedir periodo de aplicacion
   public static long[] pedirPeriodo(){
        Scanner s=new Scanner(System.in);
        long periodo[]=new long[2];
        for(byte i=1; i>-1; i--){
            if(i==1){
                System.out.println("Ingrese el numero indicado dependiendo de si la siguiente fecha sera dentro de x cantidad de...\n0 - dias\n1 - semanas\n2 - meses\n3 - aÃ±os");
                do{
                    periodo[1]=s.nextLong();
                    if(!(periodo[1]==0 || periodo[1]==1 || periodo[1]==2 || periodo[1]==3)){
                    System.out.println("Ingrese un numero valido, 0 para dias, 1 para semanas, 2 para meses y 3 para aÃ±os");
                    }
                }while(!(periodo[1]==0 || periodo[1]==1 || periodo[1]==2 || periodo[1]==3));
            }
            else{
                System.out.print("Ingrese dentro de cuantos ");;
                if(periodo[1]==0)
                    System.out.println("dias sera la siguiente fecha");
                else if(periodo[1]==1)
                    System.out.println("semanas sera la siguiente fecha");
                else if(periodo[1]==2)
                    System.out.println("meses sera la siguiente fecha");
                else
                    System.out.println("aÃ±os sera la siguiente fecha");
                do{
                    periodo[0]=s.nextLong();
                    if(periodo[0]<1)
                        System.out.println("Ingrese un valor valido");
                }while(periodo[0]<1);
            }
        }
        return periodo;
    }
    
    //Metodo para pedir ultima fecha de aplicacion
    public static LocalDate pedirFechaUltimaAplicacion(){
      Scanner s= new Scanner(System.in);
      int dia, mes, year;
        //Ingresar año
        System.out.println("Ingrese año de la ultima aplicacion del medicamento");
        do{
            year=s.nextInt();
            if(year<1)
            System.out.println("Ingrese un año valido");
        }while(year<1);
        //Ingresar mes    
        System.out.println("Ingrese mes");
        do{
            mes=s.nextInt();
            if(!(mes>=1 && mes<=12))
            System.out.println("Ingrese un numero del 1 al 12");
        }while(!(mes>=1 && mes<=12));
        //Ingresar dia    
        System.out.println("Ingrese dia del mes");
        //Meses con 31 dias 
        byte limite;   
        if(mes==1 || mes==3 || mes==5 || mes==7 || mes==8 || mes==10 || mes==12){
            limite=31;
            do{
                dia=s.nextInt();
                if(!(dia>=1 && dia<=limite))
                System.out.println("Ingrese un dia entre 1 y "+limite);
            }while(!(dia>=1 && dia<=limite));
        }
        //Meses con 30 dias
        else if(mes==4 || mes==6 || mes==9 || mes==11){
            limite=30;
            do{
                dia=s.nextInt();
                if(!(dia>=1 && dia<=limite))
                System.out.println("Ingrese un dia entre 1 y "+limite);
            }while(!(dia>=1 && dia<=limite));
        }
        //Febrero
        else{
        limite=28;
        if(year%4==0 && (!(year%100==0)||year%400==0))//Es bisiesto cuando es divisible entre 4 y no divisile entre 100 o divisible entre 400.
            //2000 es bisiesto, 1900 no.
            limite=29;
            do{
                dia=s.nextInt();
                if(!(dia>=1 && dia<=limite))
                System.out.println("Ingrese un dia entre 1 y "+limite);
            }while(!(dia>=1 && dia<=limite));
        }
        LocalDate fechaUltimaAplicacion=LocalDate.of(year, mes, dia);
      return fechaUltimaAplicacion;
   }
}
